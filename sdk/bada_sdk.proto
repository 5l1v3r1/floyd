
message SdkInvalidOperation {
  required int32 opcode = 1;
  required int32 what = 2;
  required bytes why = 3;
}

message SdkSet {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes key = 3;
  required bytes value = 4;
  optional int32 writesrc = 5 [default = 0];
}

message SdkSetRet {
  required int32 opcode = 1;
  required bool status = 2;
  optional string master = 3;
}

message SdkCas {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes key = 3;
  required bytes value = 4;
  required int32 version = 5;
  optional int32 writesrc = 6 [default = 0];
}

message SdkCasRet {                                                                                                                                                                                                                
  required int32 opcode = 1;
  required bool status = 2;
  optional string master = 3;
}

message SdkGet {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes key = 3;
}

message SdkGetRet {
  required int32 opcode = 1;
  required bytes value = 2;
  optional string master = 3;
}

message SdkGetV {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes key = 3;
}

message SdkGetVRet {
  required int32 opcode = 1;
  required bytes value = 2;
  required int32 version = 3;
  optional string master = 4;
}

message SdkIncrby {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes key = 3;
  required int64 by = 4;
  required int32 incrordecr = 5;
  optional int32 writesrc = 6 [default = 0];
}

message SdkIncrbyRet {
  required int32 opcode = 1;
  required bytes value = 2;
}

message SdkDelete {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes key = 3;
  optional int32 writesrc = 4 [default = 0];
}

message SdkDeleteRet {
  required int32 opcode = 1;
  required bool status = 2;
  optional string master = 3;
}

message SdkPing {
  required int32 opcode = 1;
}

message SdkPingRet {
  required int32 opcode = 1;
  required bool status = 2;
}

message SdkGetIfAll {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes key = 3;
  required bool Strict = 4;
}

message SdkGetIfAllRet {
  required int32 opcode = 1;
  required bytes value = 2;
  required int32 version = 3;
  optional string master = 4;
}

message SdkMGet {
  required int32 opcode = 1;
  required bytes table = 2;
  repeated bytes key = 3;
}

message SdkMGetRet {
  required int32 opcode = 1;

  message KeyValue {
    required bytes key = 1;
    required bytes value = 2;
    required int32 status = 3;
  }

  repeated KeyValue rets = 2;
  optional string master = 3;
}

message SdkMSet {
    required int32 opcode = 1;
    required bytes table = 2;

    message KeyValue {
        required bytes key = 1;
        required bytes value = 2;
    }

    repeated KeyValue kvs = 3;
    optional int32 writesrc = 4 [default = 0];
}

message SdkMSetRet {
    required int32 opcode = 1;

    message KeyRetval {
        required bytes key = 1;
        required int32 retval = 2;
    }

    repeated KeyRetval krvs = 2;
}

message GetMetadata4SDK2 {
    required int32 cmd = 1;
    required string table = 2;
}

message Rint32 {
    required int32 id = 1;
}

message GetMetadata4SDK3 {
    required int32 cmd = 1;
    message NPs {
        required string host = 1;
        required int32 port = 2;
        repeated Rint32 partitions = 3;
    }
    repeated NPs nps = 2;
    required int32 pcnt = 3;
}

message GetPrimary4SDK2 {
    required int32 cmd = 1;
    required string table = 2;
    required int32 partition = 3;
}

message GetPrimary4SDK3 {
    required int32 cmd = 1;
    required string host = 2;
    required int32 port = 3;
}


message SdkHGet {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes hname = 3;
  required bytes key = 4;
}

message SdkHGetRet {
  required int32 opcode = 1;
  required bytes value = 2;
}

message SdkHLen {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes hname = 3;
}

message SdkHLenRet {
  required int32 opcode = 1;
  required int64 value = 2;
}

message SdkHPut {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes hname = 3;
  required bytes key = 4;
  required bytes value = 5;
  optional int32 writesrc = 6 [default = 0];
}

message SdkHPutRet {
  required int32 opcode = 1;
  required bool status = 2;
}
 
message SdkHDelete {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes hname = 3;
  required bytes key = 4;
  optional int32 writesrc = 5 [default = 0];
}

message SdkHDeleteRet {
  required int32 opcode = 1;
  required bool status = 2;
}

message SdkHGetAllKeysByName {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes hname = 3;
}

message SdkHGetAllKeysByNameRet {
    required int32 opcode = 1;
    repeated bytes keys = 2;
}


message SdkHGetAllKVsByName {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes hname = 3;
}


message SdkHGetAllKVsByNameRet {
    required int32 opcode = 1;
    message HKeyValue {
        required bytes key = 1;
        required bytes value = 2;
    }

    repeated HKeyValue rets = 2;
}

message SdkHMput {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes hname = 3;

    message HKeyValue {
        required bytes key = 1;
        required bytes value = 2;
    }

    repeated HKeyValue kvs = 4;
	optional int32 writesrc = 5 [default = 0];
}

message SdkHMputRet {
    required int32 opcode = 1;

    message HKeyRetval {
        required bytes key = 1;
        required int32 retval = 2;
    }

    repeated HKeyRetval krvs = 2;
}

message SdkHMget {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes hname = 3;
    repeated bytes keys = 4;
}

message SdkHMgetRet {
    required int32 opcode = 1;

    message HKeyValue {
        required bytes key = 1;
        required bytes value = 2;
        required int32 retval = 3;
    }   

    repeated HKeyValue kvs = 2;
}

message SdkHRange {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes start = 4;
    required bytes end = 5;
}

message SdkHRangeRet {
    required int32 opcode = 1;

    message HKeyValue {
        required bytes key = 1;
        required bytes value = 2;
    }   

    repeated HKeyValue kvs = 2;
}

message SdkHTrim {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes hname = 3;
  required bytes start = 4;
  required bytes end = 5;
  optional int32 writesrc = 6 [default = 0];
}

message SdkHTrimRet {
  required int32 opcode = 1;
  required int32 retval = 2;
}

message SdkSetWithTTL {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes key = 3;
  required bytes value = 4;
  required int32 ttl = 5;
  optional int32 writesrc = 6 [default = 0];
}

message SdkSetWithTTLRet {
  required int32 opcode = 1;
  required bool status = 2;
  optional string master = 3;
}

message SdkLSize{
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes name = 3;
}

message SdkLSizeRet {
  required int32 opcode = 1;
  required uint64 size_r = 2;
}

message SdkLGet {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes name = 3;
  required int32 frontorback = 4;
}

message SdkLGetRet {
  required int32 opcode = 1;
  required bytes value = 2;
}

message SdkLPut {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes name = 3;
  required bytes value = 4;
  required int32 frontorback = 5;
  optional int32 writesrc = 6 [default = 0];
}

message SdkLPutRet {
  required int32 opcode = 1;
  required bool status = 2;
}

message SdkLSet {
  required int32 opcode = 1;
  required bytes table = 2;
  required int32 index = 3;
  required bytes value = 4;
  optional int32 writesrc = 5 [default = 0];
}

message SdkLSetRet {
  required int32 opcode = 1;
  required bool status = 2;
}

message SdkLPop{
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes name = 3;
  required int32 frontorback = 4;
  optional int32 writesrc = 5 [default = 0];
}

message SdkLPopRet {
  required int32 opcode = 1;
  required bytes value  = 2;
}

message SdkLIndex {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes name = 3;
  required uint64 index = 4;
  required int32 frontorback = 5;
}

message SdkLIndexRet {
  required int32 opcode = 1;
  required bytes value = 2;
}

message SdkLRange {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes name = 3;
  required uint64 from = 4;
  required uint64 to = 5;
  required int32 frontorback = 6;
}

message SdkLRangeRet {
    required int32 opcode = 1;
    repeated bytes value = 2;
}

message SdkLTrim {
  required int32 opcode = 1;
  required bytes table = 2;
  required bytes name = 3;
  required int64 from = 4;
  required int64 to = 5;
  optional int32 writesrc = 6 [default = 0];
}

message SdkLTrimRet {
    required int32 opcode = 1;
    required int64 size = 2;
}

message SdkGetTTL {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes key = 3;
}

message SdkGetTTLRet {
    required int32 opcode = 1;
    required int32 ttl = 2;
    optional string master = 3;
}

message SdkZAdd {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes score = 4;
    required bytes key = 5;
    optional int32 writesrc = 6 [default = 0];
}

message SdkZAddRet {
    required int32 opcode = 1;
    required bool  status = 2;
}

message SdkZGet {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes key = 4;
}

message SdkZGetRet {
    required int32 opcode = 1;
    required bytes value = 2;
}

message SdkZSize {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
}

message SdkZSizeRet {
    required int32 opcode = 1;
    required int64 value = 2;
}

message SdkZCount {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes start = 4;
    required bytes end = 5;
}

message SdkZCountRet {
    required int32 opcode = 1;
    required int64 value = 2;
}

message SdkZIncr {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes key = 4;
    required int64 by = 5;
    optional int32 writesrc = 6 [default = 0];
}

message SdkZIncrRet {
    required int32 opcode = 1;
    required bytes value = 2;
}

message SdkZIncrByFloat {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes key = 4;
    required bytes by = 5;
    optional int32 writesrc = 6 [default = 0];
}

message SdkZIncrByFloatRet {
    required int32 opcode = 1;
    required bytes value = 2;
}

message SdkZRank {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes key = 4;
}

message SdkZRankRet {
    required int32 opcode = 1;
    required int64 value = 2;
}

message SdkZRRank {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes key = 4;
}

message SdkZRRankRet {
    required int32 opcode = 1;
    required int64 value = 2;
}

message SdkZRange {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required int64 start = 4;
    required int64 end = 5;
}

message SdkZRangeRet {
    required int32 opcode = 1;
    
    message ZKeyScore {
        required bytes key = 1;
        required bytes score = 2;
    }   

    repeated ZKeyScore kss = 2;
}

message SdkZRangeByScore {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes start = 4;
    required bytes end = 5;
}

message SdkZRangeByScoreRet {
    required int32 opcode = 1;
    
    message ZKeyScore {
        required bytes key = 1;
        required bytes score = 2;
    }   

    repeated ZKeyScore kss = 2;
}

message SdkZRRange {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required int64 start = 4;
    required int64 end = 5;
}

message SdkZRRangeRet {
    required int32 opcode = 1;
    
    message ZKeyScore {
        required bytes key = 1;
        required bytes score = 2;
    }   

    repeated ZKeyScore kss = 2;
}

message SdkZRRangeByScore {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes start = 4;
    required bytes end = 5;
}

message SdkZRRangeByScoreRet {
    required int32 opcode = 1;
    
    message ZKeyScore {
        required bytes key = 1;
        required bytes score = 2;
    }   

    repeated ZKeyScore kss = 2;
}

message SdkZDel {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes key = 4;
    optional int32 writesrc = 5 [default = 0];
}

message SdkZDelRet {
    required int32 opcode = 1;
    required int64 value  = 2;
}

message SdkZDelByRank {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required int64 start = 4;
    required int64 end = 5;
    optional int32 writesrc = 6 [default = 0];
}

message SdkZDelByRankRet {
    required int32 opcode = 1;
    required int64 value  = 2;
}

message SdkZDelByScore {
    required int32 opcode = 1;
    required bytes table = 2;
    required bytes name = 3;
    required bytes start = 4;
    required bytes end = 5;
    optional int32 writesrc = 6 [default = 0];
}

message SdkZDelByScoreRet {
    required int32 opcode = 1;
    required int64 value  = 2;
}

